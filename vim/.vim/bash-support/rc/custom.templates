§ =============================================================
§  Custom Templates
§ =============================================================

§ set the template style used after loading the library
SetStyle( 'default' )

§ used by the template "Comments.shebang":
SetMacro( 'BASH_INTERPRETER', '/bin/bash' )

§ templates automatically included into new files
§ set the property to an empty string to disable the insertion
§SetProperty ( 'Bash::FileSkeleton::Script', 'Comments.shebang;Comments.file header; ;Skeleton.script-set' )

§ -------------------------------------------------------------
§  A template definition is build like this:
§    == Menu.some name == <options> ==
§    <inserted code>
§    == Menu.other name == <options> ==
§    <inserted code>
§    == ENDTEMPLATE ==
§  A template ends with the line "== ENDTEMPLATE ==" or with
§  the start of a new template.
§ -------------------------------------------------------------

§ -------------------------------------------------------------
§  Inserted when creating a new script.
§  See configuration variable 'g:BASH_InsertFileHeader'
§  and template property 'Bash::FileSkeleton::Script'.
§
§  - option 'nomenu': this will not create a menu entry
§ -------------------------------------------------------------

§ uncomment and edit to customize

§== Skeleton.script-set == nomenu, below ==
§set -o nounset                                  # Treat unset variables as an error
§shopt -s extglob                                # Extended pattern matching
§== ENDTEMPLATE ==

§ -------------------------------------------------------------
§  Statements
§ -------------------------------------------------------------

§ uncomment and edit to customize

§== Statements.case == map:sc, shortcut:c  ==
§case <CURSOR> in
§	)
§	;;
§
§	)
§	;;
§
§	*)
§	;;
§
§esac    # --- end of case ---
§== ENDTEMPLATE ==

§== Statements.function == map:sfu, shortcut:f  ==
§|?FUNCTION_NAME| ()
§{
§<CURSOR><SPLIT>
§}	# ----------  end of function |FUNCTION_NAME|  ----------
§== ENDTEMPLATE ==

